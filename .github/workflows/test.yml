name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: yehoda1234/task_todo5:latest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Prepare SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Deploy via SSH
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/deploy_key ${{ secrets.AWS_USER }}@${{ secrets.AWS_HOST }} << 'EOF'
            # התקנת Docker אם לא קיים
            if ! command -v docker &> /dev/null
            then
              sudo apt-get update -y || sudo yum update -y
              sudo apt-get install -y docker.io || sudo yum install -y docker
              sudo systemctl enable --now docker
            fi

            # התקנת Docker Compose אם לא קיים
            if ! command -v docker-compose &> /dev/null
            then
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # כניסה ל-DockerHub
            echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin

            # עדכון הקונטיינר
            docker pull yehoda1234/task_todo5:latest
            docker stop task_todo || true
            docker rm task_todo || true
            docker run -d --restart=always --name task_todo -p 80:5000 yehoda1234/task_todo5:latest
          EOF
