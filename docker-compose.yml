version: '3'
services:
  app:
    image: flask_app:latest
    container_name: flask_app
    restart: unless-stopped
    build:
      # build the image from Dockerfile
      context: .
      dockerfile: Dockerfile
    environment:
      # set database credentials
      DB_HOST: flask_mysql
      DB_NAME: flask
      DB_USER: flask
      DB_PASSWORD: password

    links:
      # network connection with these services
      - mysql
    depends_on:
      # build those images first
      - mysql
    ports:
      # bind on our 5000 port because most people have 80, 8080 already bound
      - "5000:5000"

  mysql:
    container_name: flask_mysql
    # let's grab from mysql 5.7 image
    image: mysql:latest
    volumes:
        # pass volume named mysql-data to mysql container
      - mysql-data:/var/lib/mysql
      - ./db/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
    restart: unless-stopped
    ports:
      - "3307:3306"
      # credentials
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: flask
      MYSQL_USER: flask
      MYSQL_PASSWORD: password


  test_client:
    container_name: test_client
    build:
      context: ./test
      dockerfile: Dockerfile
    depends_on:
      - app
    links:
      - app 


  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: flask_mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    depends_on:
      - mysql
    links:
      - mysql      
 
# volumes definition here
volumes:

  # just a persistance data
  mysql-data:
    driver: local


